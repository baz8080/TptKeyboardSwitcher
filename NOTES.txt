General
=======
Symlinks of kcm files are picked up when keyboard is plugged in and out. No need for reboot.

Detect and obtain root [done]
=============================
http://www.stealthcopter.com/blog/2010/01/android-requesting-root-access-in-your-app/

Detect normal and symlink files
===============================
Can use -L for symlink and -e for normal

Process
=======
A) Check for existence of
  1) Symlink of vendor file
    1.1) if present continue
    1.2) if not present make it and point to generic kcm
  2) regular layout files (currently only UK english)
    2.1) for each if not present extract from resources
   
B) Select new language (currently generic + UK) (REQUIRES ROOT)
  1) remove symlink (check again)
  2) create symlink & point to selected file.
  
Rewrite [done]
=======
Too much boilerplate code. Consider a builder pattern

.command(? extends AbstractCommand)
.command(? extends AbstractCommand)
...
.asRoot() // only if required
.execute()

Then each command object would only be responsible for string formatting.
The list of command objects could be run as a "transaction". The command objects
could also possibly define a rollback condition?

Copying [done - error checking still required]
======= 
Might not have the permissions to create a file so that will have to be
done in shell with root access after remounting /system rw. Then can use java fileutils
to copy the actual content.

Settings
========
App might be useful on non TP tablets - could provide settings screen for vendor,
product and version codes, and then process should be portable.
